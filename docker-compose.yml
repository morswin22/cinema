version: "3.8"

services:
  ndb_mgmd:
    image: mysql/mysql-cluster:8.0
    container_name: ndb_mgmd
    hostname: ndb_mgmd
    command: ndb_mgmd --ndb-nodeid=1 -f /usr/mysql-cluster/config.ini
    volumes:
      - ./cluster-config:/usr/mysql-cluster
    networks:
      cluster-network:
        ipv4_address: 192.168.0.2

  ndbd1:
    image: mysql/mysql-cluster:8.0
    container_name: ndbd1
    hostname: ndbd1
    command: ndbd --ndb-nodeid=2
    depends_on:
      - ndb_mgmd
    volumes:
      - ./cluster-config:/usr/mysql-cluster
    networks:
      cluster-network:
        ipv4_address: 192.168.0.3

  ndbd2:
    image: mysql/mysql-cluster:8.0
    container_name: ndbd2
    hostname: ndbd2
    command: ndbd --ndb-nodeid=3
    depends_on:
      - ndb_mgmd
    volumes:
      - ./cluster-config:/usr/mysql-cluster
    networks:
      cluster-network:
        ipv4_address: 192.168.0.4

  mysqld:
    image: mysql:8.0
    container_name: mysqld
    hostname: mysqld
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cinema
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    command: --ndbcluster --ndb-connectstring=ndb_mgmd
    ports:
      - "3307:3306"
    depends_on:
      - ndbd1
      - ndbd2
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    networks:
      cluster-network:
        ipv4_address: 192.168.0.10
    healthcheck:
      test: ["CMD", "mysqladmin", "ping"]
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 5s

  migration:
    build: .
    depends_on:
      - mysqld
    environment:
      DATABASE_URL: mysql://user:password@mysqld:3306/cinema
      MIGRATION: true
    networks:
      cluster-network:

  app:
    build: .
    depends_on:
      - migration
    environment:
      DATABASE_URL: mysql://user:password@mysqld:3306/cinema
    ports:
      - "8080"
    stdin_open: true
    tty: true
    networks:
      cluster-network:

  nginx:
    image: nginx:stable-alpine
    container_name: nginx_lb
    hostname: nginx_lb
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app
    networks:
      cluster-network:
        ipv4_address: 192.168.0.50

networks:
  cluster-network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.0.0/24